---
import { getCollection } from 'astro:content';
import Layout from '../../layouts/Layout.astro';
import Slide from '../../components/slides/Slide.astro';
import { fade, slide } from 'astro:transitions';
import BackButton from '@/components/BackButton.astro';

export async function getStaticPaths() {
  const slides = await getCollection('slides');
  slides.sort((a, b) => (a.data.order ?? 0) - (b.data.order ?? 0));
  return slides.map((_, index) => ({
    params: { index: index.toString() },
    props: { slides },
  }));
}

const { index } = Astro.params;
const { slides } = Astro.props;

const currentIndex = parseInt(index!, 10);
const currentSlide = slides[currentIndex];
const prevIndex = currentIndex > 0 ? currentIndex - 1 : null;
const nextIndex = currentIndex < slides.length - 1 ? currentIndex + 1 : null;
---

<Layout>
  <BackButton />
  <div class="z-10 flex h-full w-full flex-col items-center justify-center p-4 2xl:p-100">
    <div
      id="content"
      class="w-full"
      transition:name={`/presentation/${currentIndex}`}
      transition:animate={slide({ duration: '0.5s' })}
    >
      <Slide slide={currentSlide} hideContent={false} />
    </div>
    <div class="relative z-30 my-4 flex w-full items-center justify-between">
      {
        prevIndex !== null ? (
          <a
            id="prev-slide"
            class="transition-link text-notion-light-default-text hidden"
            href={`/presentation/${prevIndex}`}
          >
            Previous
          </a>
        ) : (
          <div />
        )
      }
      {
        nextIndex !== null ? (
          <a
            id="next-slide"
            class="transition-link text-notion-light-default-text hidden"
            href={`/presentation/${nextIndex}`}
          >
            Next
          </a>
        ) : (
          <div />
        )
      }
    </div>
  </div>
</Layout>
<script>
  document.addEventListener('keydown', e => {
    switch (e.key) {
      case 'Escape':
        (document.getElementById('home-link') as HTMLAnchorElement)?.click();
        break;
      case 'ArrowLeft':
        (document.getElementById('prev-slide') as HTMLAnchorElement)?.click();
        break;
      case 'ArrowRight':
        (document.getElementById('next-slide') as HTMLAnchorElement)?.click();
        break;
    }
  });
</script>
