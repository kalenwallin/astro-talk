---
import { getCollection } from 'astro:content';
import Layout from '../../layouts/Layout.astro';
import Slide from '../../components/slides/Slide.astro';
import { fade } from 'astro:transitions';

export async function getStaticPaths() {
  const slides = await getCollection('slides');
  slides.sort((a, b) => (a.data.order ?? 0) - (b.data.order ?? 0));
  return slides.map((_, index) => ({
    params: { index: index.toString() },
  }));
}

const slides = await getCollection('slides');
slides.sort((a, b) => (a.data.order ?? 0) - (b.data.order ?? 0));
const currentIndex = parseInt(Astro.params.index, 10);
const currentSlide = slides[currentIndex];
const prevIndex = currentIndex > 0 ? currentIndex - 1 : null;
const nextIndex = currentIndex < slides.length - 1 ? currentIndex + 1 : null;

// Get the previous page URL
const referer = Astro.request.headers.get('referer') || ''; // "/" or "/presentation/#"
const isFromHome = referer.endsWith('/');

// const previousPageIndex = isFromHome ? null : parseInt(referer.split('/').pop() || '0', 10);
// const slideDirection = previousPageIndex === null ? null : previousPageIndex < currentIndex ? 'left' : 'right';

export const prerender = false; // so that we can check which transition is used
---

<Layout>
  <div class="absolute top-4 left-4 z-20">
    <a href="/" class="flex items-center gap-1 text-gray-300 transition-colors hover:underline">
      <svg
        xmlns="http://www.w3.org/2000/svg"
        width="20"
        height="20"
        viewBox="0 0 24 24"
        fill="none"
        stroke="currentColor"
        stroke-width="2"
        stroke-linecap="round"
        stroke-linejoin="round"
      >
        <path d="M19 12H5M12 19l-7-7 7-7"></path>
      </svg>
      Back to all slides
    </a>
  </div>
  <div class="z-10 flex h-screen items-center justify-center px-24 pt-24 pb-16">
    <div
      id="content"
      class="w-full"
      transition:name={`/presentation/${currentIndex}`}
      transition:animate={isFromHome ? fade({ duration: 1 }) : 'slide'}
    >
      <Slide slide={currentSlide} />
      <div class="mt-4 flex justify-between">
        {
          prevIndex !== null ? (
            <a class="transition-link text-blue-400" href={`/presentation/${prevIndex}`}>
              Previous
            </a>
          ) : (
            <div />
          )
        }
        {
          nextIndex !== null ? (
            <a class="transition-link text-blue-400" href={`/presentation/${nextIndex}`}>
              Next
            </a>
          ) : (
            <div />
          )
        }
      </div>
    </div>
  </div>
</Layout>
